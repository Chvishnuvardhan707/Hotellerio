/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hotellerio;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.*;
import javax.swing.JOptionPane;
import javax.swing.*;
//import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
/**
 *
 * @author Vishnu Vardhan CH
 */
public class Book_Food extends javax.swing.JFrame {

    /**
     * Creates new form Book_Food
     */
    public Book_Food() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        meal_list = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtable = new javax.swing.JTable();
        cancel_03 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        meal_list.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BreakFast", "Lunch-Veg", "Lunch-Non-Veg", "Snacks", "Dinner-Veg", "Dinner-Non-Veg" }));
        meal_list.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meal_listActionPerformed(evt);
            }
        });

        jLabel1.setText("Select your meal");

        jtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtable);

        cancel_03.setText("Cancel");
        cancel_03.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancel_03ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addComponent(jLabel1)
                        .addGap(89, 89, 89)
                        .addComponent(meal_list, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(79, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(cancel_03)
                .addGap(70, 70, 70))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(meal_list, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(cancel_03)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void meal_listActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meal_listActionPerformed
        String type = (String)meal_list.getSelectedItem( );
        System.out.println(type);
        if(type=="Dinner-Non-Veg")
        {
            try {
                try 
                {
                    Class.forName("com.mysql.jdbc.Driver");
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Book_Food.class.getName()).log(Level.SEVERE, null, ex);
                }
                    String url = "jdbc:mysql://localhost:3306/hotellerio";
                    String user = "root";
                    String pass = "1.414magiC";
                    Connection con = DriverManager.getConnection(url,user,pass);
                        String sql1= "select * from lunch_non_veg_menu";
                    PreparedStatement ps1 = con.prepareStatement(sql1);
                    ResultSet rs1 = ps1.executeQuery();
                    jtable.setModel(DbUtils.resultSetToTableModel(rs1));
                } 
            catch (SQLException ex) 
            {
                Logger.getLogger(Book_Food.class.getName()).log(Level.SEVERE, null, ex);
            }     
        }
        if(type=="Dinner-Veg")
        {
             try {
                try {
                    Class.forName("com.mysql.jdbc.Driver");
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Book_Food.class.getName()).log(Level.SEVERE, null, ex);
                }
            String url = "jdbc:mysql://localhost:3306/hotellerio";
            String user = "root";
            String pass = "1.414magiC";
            Connection con = DriverManager.getConnection(url,user,pass);
                        String sql1= "select * from lunch_menu";
                PreparedStatement ps1 = con.prepareStatement(sql1);
                ResultSet rs1 = ps1.executeQuery();
                jtable.setModel(DbUtils.resultSetToTableModel(rs1));
            } catch (SQLException ex) {
                Logger.getLogger(Book_Food.class.getName()).log(Level.SEVERE, null, ex);
            }
        
            
        }
        if(type=="Snacks")
        {
            try {
                try 
                {
                    Class.forName("com.mysql.jdbc.Driver");
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Book_Food.class.getName()).log(Level.SEVERE, null, ex);
                }
                    String url = "jdbc:mysql://localhost:3306/hotellerio";
                    String user = "root";
                    String pass = "1.414magiC";
                    Connection con = DriverManager.getConnection(url,user,pass);
                        String sql1= "select * from snacks_menu";
                    PreparedStatement ps1 = con.prepareStatement(sql1);
                    ResultSet rs1 = ps1.executeQuery();
                    jtable.setModel(DbUtils.resultSetToTableModel(rs1));
                } 
            catch (SQLException ex) 
            {
                Logger.getLogger(Book_Food.class.getName()).log(Level.SEVERE, null, ex);
            }     
        }
        if(type=="Lunch-Non-Veg")
        {
             try {
                try 
                {
                    Class.forName("com.mysql.jdbc.Driver");
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Book_Food.class.getName()).log(Level.SEVERE, null, ex);
                }
                    String url = "jdbc:mysql://localhost:3306/hotellerio";
                    String user = "root";
                    String pass = "1.414magiC";
                    Connection con = DriverManager.getConnection(url,user,pass);
                        String sql1= "select * from lunch_non_veg_menu";
                    PreparedStatement ps1 = con.prepareStatement(sql1);
                    ResultSet rs1 = ps1.executeQuery();
                    jtable.setModel(DbUtils.resultSetToTableModel(rs1));
                } 
            catch (SQLException ex) 
            {
                Logger.getLogger(Book_Food.class.getName()).log(Level.SEVERE, null, ex);
            }     
        }
        if(type=="Lunch-Veg")
        {
             try {
                try {
                    Class.forName("com.mysql.jdbc.Driver");
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Book_Food.class.getName()).log(Level.SEVERE, null, ex);
                }
            String url = "jdbc:mysql://localhost:3306/hotellerio";
            String user = "root";
            String pass = "1.414magiC";
            Connection con = DriverManager.getConnection(url,user,pass);
                        String sql1= "select * from lunch_menu";                        
                PreparedStatement ps1 = con.prepareStatement(sql1);
                ResultSet rs1 = ps1.executeQuery();
                jtable.setModel(DbUtils.resultSetToTableModel(rs1));
            } catch (SQLException ex) {
                Logger.getLogger(Book_Food.class.getName()).log(Level.SEVERE, null, ex);
            }
        
            
        }
        if(type=="BreakFast")
        {
            try {
                try 
                {
                    Class.forName("com.mysql.jdbc.Driver");
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Book_Food.class.getName()).log(Level.SEVERE, null, ex);
                }
                    String url = "jdbc:mysql://localhost:3306/hotellerio";
                    String user = "root";
                    String pass = "1.414magiC";
                    Connection con = DriverManager.getConnection(url,user,pass);
                        String sql1= "select * from breakfast_menu where item_type=?";
                        String dd="Veg";                       
                    PreparedStatement ps1 = con.prepareStatement(sql1);
                    ps1.setString(1, dd);
                    ResultSet rs1 = ps1.executeQuery();
                    jtable.setModel(DbUtils.resultSetToTableModel(rs1));
                } 
            catch (SQLException ex) 
            {
                Logger.getLogger(Book_Food.class.getName()).log(Level.SEVERE, null, ex);
            }     
        }
    }//GEN-LAST:event_meal_listActionPerformed

    private void cancel_03ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancel_03ActionPerformed
this.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_cancel_03ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) 
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Book_Food.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Book_Food.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Book_Food.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Book_Food.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Book_Food().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancel_03;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtable;
    private javax.swing.JComboBox<String> meal_list;
    // End of variables declaration//GEN-END:variables
}
