/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hotellerio;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Vishnu Vardhan CH
 */
public class Order_Food extends javax.swing.JFrame {

    /**
     * Creates new form Order_Food
     */
    public Order_Food() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        mealtype_2 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        place_order = new javax.swing.JButton();
        no_of_Plate = new javax.swing.JTextField();
        cancel_04 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        custid_03 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        order_Id = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Order your Food here!");

        jLabel2.setText("Select your meal");

        mealtype_2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BreakFast", "Lunch-Veg", "Lunch-Non-Veg", "Snacks", "Dinner-Veg", "Dinner-Non-Veg" }));
        mealtype_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mealtype_2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Enter Number of Plates ");

        place_order.setText("Order more");
        place_order.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                place_orderActionPerformed(evt);
            }
        });

        cancel_04.setText("Cancel");
        cancel_04.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancel_04ActionPerformed(evt);
            }
        });

        jLabel4.setText("Customer");

        jLabel5.setText("Order Id");

        jButton2.setText("Done");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(85, 85, 85)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel5))
                                    .addComponent(jLabel1)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel3)))
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(no_of_Plate)
                            .addComponent(mealtype_2, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(custid_03, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(order_Id)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(cancel_04)
                        .addGap(26, 26, 26)
                        .addComponent(place_order)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(custid_03, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(mealtype_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(order_Id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(no_of_Plate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(place_order)
                    .addComponent(cancel_04)
                    .addComponent(jButton2))
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void place_orderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_place_orderActionPerformed
        // TODO add your handling code here:
         long millis=System.currentTimeMillis();
    java.sql.Timestamp date1 ;
        date1 = new java.sql.Timestamp(millis);
        String str = (String)mealtype_2.getSelectedItem();
        String str1 = (String)order_Id.getText();
        int no_of_p=Integer.valueOf(no_of_Plate.getText());
        if(str=="BreakFast"){try {
                try 
                {
                    Class.forName("com.mysql.jdbc.Driver");
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Book_Food.class.getName()).log(Level.SEVERE, null, ex);
                }
                    String url = "jdbc:mysql://localhost:3306/hotellerio";
                    String user = "root";
                    String pass = "1.414magiC";
                    Connection con = DriverManager.getConnection(url,user,pass);
                    String sql2="select price from breakfast_menu where id=?";
                    PreparedStatement ps2 = con.prepareStatement(sql2);
                    ps2.setString(1,str1);
                    ResultSet rs2= ps2.executeQuery();
                    float f=0;
                    while(rs2.next())
                     {
                         f = rs2.getFloat(1);
                         System.out.println("price of 1 qty is "+f);
                     }
                    float t_price = f*no_of_p;
                    System.out.println("total price is "+t_price);
                    String sql3="select item_name from breakfast_menu where id=?";
                    PreparedStatement ps3 = con.prepareStatement(sql3);
                    ps3.setString(1,str1);
                    ResultSet rs3= ps3.executeQuery();
                    String name_of= new String();
                    while(rs3.next())
                     {
                         name_of = rs3.getString(1);
                         System.out.println("name of qty is "+name_of);
                     }
                    String sql1= "insert into order_breakfast values(?,?,?,?)";
                    PreparedStatement ps = con.prepareStatement(sql1);
                    ps.setInt(1,Integer.valueOf(custid_03.getText()));
                    ps.setString(2,name_of);
                    ps.setInt(3,Integer.valueOf(no_of_Plate.getText()));
                    ps.setFloat(4,t_price);
                    ps.executeUpdate();
                    
                    } 
        
            catch (SQLException ex) 
            {
                Logger.getLogger(Book_Food.class.getName()).log(Level.SEVERE, null, ex);
            }
        finally
        {
            custid_03.setText("");
            order_Id.setText("");
            no_of_Plate.setText("");
       }
        } 
        
        if(str=="Lunch-Veg"){try {
                try 
                {
                    Class.forName("com.mysql.jdbc.Driver");
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Book_Food.class.getName()).log(Level.SEVERE, null, ex);
                }
                    String url = "jdbc:mysql://localhost:3306/hotellerio";
                    String user = "root";
                    String pass = "1.414magiC";
                    Connection con = DriverManager.getConnection(url,user,pass);
                    String sql2="select price from lunch_menu where id1=?";
                    PreparedStatement ps2 = con.prepareStatement(sql2);
                    ps2.setString(1,str1);
                    ResultSet rs2= ps2.executeQuery();
                    float f=0;
                    while(rs2.next())
                     {
                         f = rs2.getFloat(1);
                         System.out.println("price of 1 qty is "+f);
                     }
                    float t_price = f*no_of_p;
                    System.out.println("total price is "+t_price);
                    String sql3="select item_name from lunch_menu where id1=?";
                    PreparedStatement ps3 = con.prepareStatement(sql3);
                    ps3.setString(1,str1);
                    ResultSet rs3= ps3.executeQuery();
                    String name_of= new String();
                    while(rs3.next())
                     {
                         name_of = rs3.getString(1);
                         System.out.println("name of qty is "+name_of);
                     }
                    String sql1= "insert into order_lunch_veg values(?,?,?,?)";
                    PreparedStatement ps = con.prepareStatement(sql1);
                    ps.setInt(1,Integer.valueOf(custid_03.getText()));
                    ps.setString(2,name_of);
                    ps.setInt(3,Integer.valueOf(no_of_Plate.getText()));
                    ps.setFloat(4,t_price);
                    ps.executeUpdate();
                    
                    } 
        
            catch (SQLException ex) 
            {
                Logger.getLogger(Book_Food.class.getName()).log(Level.SEVERE, null, ex);
            }
        finally
        {
            custid_03.setText("");
            order_Id.setText("");
            no_of_Plate.setText("");
       }
        }
        
        
        //BreakFast, Lunch-Veg, Lunch-Non-Veg, Snacks, Dinner-Veg, Dinner-Non-Veg
        
        if(str=="Lunch-Non-Veg"){try {
                try 
                {
                    Class.forName("com.mysql.jdbc.Driver");
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Book_Food.class.getName()).log(Level.SEVERE, null, ex);
                }
                    String url = "jdbc:mysql://localhost:3306/hotellerio";
                    String user = "root";
                    String pass = "1.414magiC";
                    Connection con = DriverManager.getConnection(url,user,pass);
                    String sql2="select price from lunch_non_veg_menu where id2=?";
                    PreparedStatement ps2 = con.prepareStatement(sql2);
                    ps2.setString(1,str1);
                    ResultSet rs2= ps2.executeQuery();
                    float f=0;
                    while(rs2.next())
                     {
                         f = rs2.getFloat(1);
                         System.out.println("price of 1 qty is "+f);
                     }
                    float t_price = f*no_of_p;
                    System.out.println("total price is "+t_price);
                    String sql3="select name from lunch_non_veg_menu where id2=?";
                    PreparedStatement ps3 = con.prepareStatement(sql3);
                    ps3.setString(1,str1);
                    ResultSet rs3= ps3.executeQuery();
                    String name_of= new String();
                    while(rs3.next())
                     {
                         name_of = rs3.getString(1);
                         System.out.println("name of qty is "+name_of);
                     }
                    String sql1= "insert into order_lunch_non_veg values(?,?,?,?)";
                    PreparedStatement ps = con.prepareStatement(sql1);
                    ps.setInt(1,Integer.valueOf(custid_03.getText()));
                    ps.setString(2,name_of);
                    ps.setInt(3,Integer.valueOf(no_of_Plate.getText()));
                    ps.setFloat(4,t_price);
                    ps.executeUpdate();
                    
                    } 
        
            catch (SQLException ex) 
            {
                Logger.getLogger(Book_Food.class.getName()).log(Level.SEVERE, null, ex);
            }
        finally
        {
            custid_03.setText("");
            order_Id.setText("");
            no_of_Plate.setText("");
       }
        }
        
        
        if(str=="Snacks"){try {
                try 
                {
                    Class.forName("com.mysql.jdbc.Driver");
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Book_Food.class.getName()).log(Level.SEVERE, null, ex);
                }
                    String url = "jdbc:mysql://localhost:3306/hotellerio";
                    String user = "root";
                    String pass = "1.414magiC";
                    Connection con = DriverManager.getConnection(url,user,pass);
                    String sql2="select price from snacks_menu where id3=?";
                    PreparedStatement ps2 = con.prepareStatement(sql2);
                    ps2.setString(1,str1);
                    ResultSet rs2= ps2.executeQuery();
                    float f=0;
                    while(rs2.next())
                     {
                         f = rs2.getFloat(1);
                         System.out.println("price of 1 qty is "+f);
                     }
                    float t_price = f*no_of_p;
                    System.out.println("total price is "+t_price);
                    String sql3="select name from snacks_menu where id3=?";
                    PreparedStatement ps3 = con.prepareStatement(sql3);
                    ps3.setString(1,str1);
                    ResultSet rs3= ps3.executeQuery();
                    String name_of= new String();
                    while(rs3.next())
                     {
                         name_of = rs3.getString(1);
                         System.out.println("name of qty is "+name_of);
                     }
                    String sql1= "insert into order_snacks values(?,?,?,?)";
                    PreparedStatement ps = con.prepareStatement(sql1);
                    ps.setInt(1,Integer.valueOf(custid_03.getText()));
                    ps.setString(2,name_of);
                    ps.setInt(3,Integer.valueOf(no_of_Plate.getText()));
                    ps.setFloat(4,t_price);
                    ps.executeUpdate();
                    
                    } 
        
            catch (SQLException ex) 
            {
                Logger.getLogger(Book_Food.class.getName()).log(Level.SEVERE, null, ex);
            }
        finally
        {
            custid_03.setText("");
            order_Id.setText("");
            no_of_Plate.setText("");
       }
        }
        
        
        
        
        if(str=="Dinner-Veg"){try {
                try 
                {
                    Class.forName("com.mysql.jdbc.Driver");
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Book_Food.class.getName()).log(Level.SEVERE, null, ex);
                }
                    String url = "jdbc:mysql://localhost:3306/hotellerio";
                    String user = "root";
                    String pass = "1.414magiC";
                    Connection con = DriverManager.getConnection(url,user,pass);
                    String sql2="select price from lunch_menu where id1=?";
                    PreparedStatement ps2 = con.prepareStatement(sql2);
                    ps2.setString(1,str1);
                    ResultSet rs2= ps2.executeQuery();
                    float f=0;
                    while(rs2.next())
                     {
                         f = rs2.getFloat(1);
                         System.out.println("price of 1 qty is "+f);
                     }
                    float t_price = f*no_of_p;
                    System.out.println("total price is "+t_price);
                    String sql3="select item_name from lunch_menu where id1=?";
                    PreparedStatement ps3 = con.prepareStatement(sql3);
                    ps3.setString(1,str1);
                    ResultSet rs3= ps3.executeQuery();
                    String name_of= new String();
                    while(rs3.next())
                     {
                         name_of = rs3.getString(1);
                         System.out.println("name of qty is "+name_of);
                     }
                    String sql1= "insert into order_dinner_veg values(?,?,?,?)";
                    PreparedStatement ps = con.prepareStatement(sql1);
                    ps.setInt(1,Integer.valueOf(custid_03.getText()));
                    ps.setString(2,name_of);
                    ps.setInt(3,Integer.valueOf(no_of_Plate.getText()));
                    ps.setFloat(4,t_price);
                    ps.executeUpdate();
                    
                    } 
        
            catch (SQLException ex) 
            {
                Logger.getLogger(Book_Food.class.getName()).log(Level.SEVERE, null, ex);
            }
        finally
        {
            custid_03.setText("");
            order_Id.setText("");
            no_of_Plate.setText("");
       }
        }
        
        
        if(str=="Dinner-Non-Veg"){try {
                try 
                {
                    Class.forName("com.mysql.jdbc.Driver");
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Book_Food.class.getName()).log(Level.SEVERE, null, ex);
                }
                    String url = "jdbc:mysql://localhost:3306/hotellerio";
                    String user = "root";
                    String pass = "1.414magiC";
                    Connection con = DriverManager.getConnection(url,user,pass);
                    String sql2="select price from lunch_non_veg_menu where id2=?";
                    PreparedStatement ps2 = con.prepareStatement(sql2);
                    ps2.setString(1,str1);
                    ResultSet rs2= ps2.executeQuery();
                    float f=0;
                    while(rs2.next())
                     {
                         f = rs2.getFloat(1);
                         System.out.println("price of 1 qty is "+f);
                     }
                    float t_price = f*no_of_p;
                    System.out.println("total price is "+t_price);
                    String sql3="select name from lunch_non_veg_menu where id2=?";
                    PreparedStatement ps3 = con.prepareStatement(sql3);
                    ps3.setString(1,str1);
                    ResultSet rs3= ps3.executeQuery();
                    String name_of= new String();
                    while(rs3.next())
                     {
                         name_of = rs3.getString(1);
                         System.out.println("name of qty is "+name_of);
                     }
                    String sql1= "insert into order_dinner_non_veg values(?,?,?,?)";
                    PreparedStatement ps = con.prepareStatement(sql1);
                    ps.setInt(1,Integer.valueOf(custid_03.getText()));
                    ps.setString(2,name_of);
                    ps.setInt(3,Integer.valueOf(no_of_Plate.getText()));
                    ps.setFloat(4,t_price);
                    ps.executeUpdate();
                    
                    } 
        
            catch (SQLException ex) 
            {
                Logger.getLogger(Book_Food.class.getName()).log(Level.SEVERE, null, ex);
            }
        finally
        {
            custid_03.setText("");
            order_Id.setText("");
            no_of_Plate.setText("");
       }
        }
        
        
        
        
        
    }//GEN-LAST:event_place_orderActionPerformed

    private void cancel_04ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancel_04ActionPerformed
this.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_cancel_04ActionPerformed

    private void mealtype_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mealtype_2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mealtype_2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Order_Food.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Order_Food.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Order_Food.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Order_Food.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Order_Food().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancel_04;
    private javax.swing.JTextField custid_03;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JComboBox<String> mealtype_2;
    private javax.swing.JTextField no_of_Plate;
    private javax.swing.JTextField order_Id;
    private javax.swing.JButton place_order;
    // End of variables declaration//GEN-END:variables
}
